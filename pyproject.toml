[tool.poetry]
name = "retail-inventory-optimizer"
version = "0.1.0"
description = "A comprehensive retail inventory optimization system with ETL, forecasting, and optimization capabilities"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [
    {include = "etl"},
    {include = "forecast"},
    {include = "optimize"},
    {include = "api"},
]

[tool.poetry.dependencies]
python = "^3.10"
pandas = "^2.1"
pandera = "^0.17"
prophet = "^1.1"
numpy = "^1.24.0"
scikit-learn = "^1.3.0"
fastapi = "^0.100.0"
uvicorn = "^0.22.0"
pydantic = "^2.0.0"
sqlalchemy = "^2.0.0"
psycopg2-binary = "^2.9.0"
redis = "^4.6.0"
celery = "^5.3.0"
pytest = "^7.4.0"
requests = "^2.31.0"
python-dotenv = "^1.0.0"
great-expectations = "^0.18.0"
structlog = "^23.0.0"
boto3 = "^1.34.0"
polars = "^0.20.0"
matplotlib = "^3.8.0"
pmdarima = "^2.0.0"
multimethod = "^1.9.0"

[tool.poetry.group.dev.dependencies]
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.4.0"
pre-commit = "^3.3.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["etl", "forecast", "optimize", "api"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "sklearn.*",
    "celery.*",
    "redis.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["etl", "forecast", "optimize", "api"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
